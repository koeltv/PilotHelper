openapi: "3.0.3"
info:
  title: "PilotHelper planning-tools API"
  description: "PilotHelper API with all kinds of tools to help prepare a flight-plan"
  version: "1.0.0"
servers:
  - url: "http://localhost/planning-tools"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /aircraft-type:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/AircraftType"
  /aircraft-type/name/{name}:
    get:
      description: ""
      parameters:
        - name: "name"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/AircraftType"
  /aircraft-type/type/{type}:
    get:
      description: ""
      parameters:
        - name: "type"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/AircraftType"
  /airport:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Airport"
  /airport/iata/{iataCode}:
    get:
      description: ""
      parameters:
        - name: "iataCode"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Airport"
  /airport/icao/{icaoCode}:
    get:
      description: ""
      parameters:
        - name: "icaoCode"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Airport"
  /airport/name/{name}:
    get:
      description: ""
      parameters:
        - name: "name"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Airport"
  /airport/nearby:
    get:
      description: "Read all airports close to a given point"
      parameters:
        - name: "latitude"
          in: "query"
          required: false
          schema:
            type: "number"
        - name: "longitude"
          in: "query"
          required: false
          schema:
            type: "number"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Airport"
  /route:
    get:
      description: ""
      parameters:
        - name: "from"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "to"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Route"
  /weather/{airportId}:
    get:
      description: ""
      parameters:
        - name: "airportId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Weather"
components:
  schemas:
    AircraftType:
      type: "object"
      properties:
        name:
          type: "string"
        designator:
          type: "string"
        engineManufacturer:
          type: "string"
      required:
        - "name"
        - "designator"
        - "engineManufacturer"
    Geometry:
      type: "object"
      properties:
        type:
          type: "string"
        coordinates:
          type: "array"
          items:
            type: "number"
            format: "float"
      required:
        - "type"
        - "coordinates"
    Elevation:
      type: "object"
      properties:
        value:
          type: "integer"
          format: "int32"
        unit:
          type: "integer"
          format: "int32"
        referenceDatum:
          type: "integer"
          format: "int32"
    Airport:
      type: "object"
      properties:
        _id:
          type: "string"
        name:
          type: "string"
        icaoCode:
          type: "string"
        iataCode:
          type: "string"
        altIdentifier:
          type: "string"
        type:
          type: "integer"
          format: "int32"
        country:
          type: "string"
        geometry:
          $ref: "#/components/schemas/Geometry"
        elevation:
          $ref: "#/components/schemas/Elevation"
        private:
          type: "boolean"
      required:
        - "_id"
        - "name"
        - "country"
        - "geometry"
        - "elevation"
    Route:
      type: "object"
      properties:
        origin:
          type: "string"
        route:
          type: "string"
        destination:
          type: "string"
        hours1:
          type: "string"
        hours2:
          type: "string"
        hours3:
          type: "string"
        type:
          type: "string"
        area:
          type: "string"
        altitude:
          type: "string"
        aircraft:
          type: "string"
        flow:
          type: "string"
        seq:
          type: "integer"
          format: "int32"
        d_artcc:
          type: "string"
        a_artcc:
          type: "string"
      required:
        - "origin"
        - "route"
        - "destination"
        - "flow"
        - "d_artcc"
        - "a_artcc"
    Cloud:
      type: "object"
      properties:
        cover:
          type: "string"
        base:
          type: "integer"
          format: "int32"
      required:
        - "cover"
    Weather:
      type: "object"
      properties:
        metar_id:
          type: "integer"
          format: "int32"
        icaoId:
          type: "string"
        receiptTime:
          type: "string"
        obsTime:
          type: "integer"
          format: "int32"
        reportTime:
          type: "string"
        temp:
          type: "integer"
          format: "int32"
        dewp:
          type: "integer"
          format: "int32"
        wdir:
          type: "integer"
          format: "int32"
        wspd:
          type: "integer"
          format: "int32"
        wgst:
          type: "string"
        visib:
          type: "string"
        altim:
          type: "integer"
          format: "int32"
        slp:
          type: "string"
        qcField:
          type: "integer"
          format: "int32"
        wxString:
          type: "string"
        presTend:
          type: "string"
        maxT:
          type: "string"
        minT:
          type: "string"
        maxT24:
          type: "string"
        minT24:
          type: "string"
        precip:
          type: "string"
        pcp3hr:
          type: "string"
        pcp6hr:
          type: "string"
        pcp24hr:
          type: "string"
        snow:
          type: "string"
        vertVis:
          type: "string"
        metarType:
          type: "string"
        rawOb:
          type: "string"
        mostRecent:
          type: "integer"
          format: "int32"
        lat:
          type: "number"
          format: "float"
        lon:
          type: "number"
          format: "float"
        elev:
          type: "integer"
          format: "int32"
        prior:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        clouds:
          type: "array"
          items:
            $ref: "#/components/schemas/Cloud"
      required:
        - "icaoId"
        - "receiptTime"
        - "reportTime"
        - "visib"
        - "metarType"
        - "rawOb"
        - "name"
        - "clouds"